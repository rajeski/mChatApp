{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rajeski/Downloads/mChatApp/AppChat/components/Start.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Start = function (_Component) {\n  _inherits(Start, _Component);\n\n  var _super = _createSuper(Start);\n\n  function Start() {\n    var _this;\n\n    _classCallCheck(this, Start);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      userName: '',\n      backgroundColor: ''\n    };\n    return _this;\n  }\n\n  _createClass(Start, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/BackgroundImage.png\"),\n        style: styles.backgroundImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.appTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, \"ChatApp\"), React.createElement(View, {\n        style: styles.logIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.userNameInput,\n        onChangeText: function onChangeText(userName) {\n          return _this2.setState({\n            userName: userName\n          });\n        },\n        value: this.state.userName,\n        placeholder: \"Your Name...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.choseBackgroundColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"Choose Background Color:\"), React.createElement(View, {\n        style: styles.backgroundColorWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            backgroundColor: '#090C08'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: [styles.backgroundColor, styles.black],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            backgroundColor: '#474056'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: [styles.backgroundColor, styles.purple],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            backgroundColor: '#8A95A5'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: [styles.backgroundColor, styles.gray],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            backgroundColor: '#B9C6AE'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: [styles.backgroundColor, styles.green],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }))), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('Chat', {\n            userName: _this2.state.userName,\n            backgroundColor: _this2.state.backgroundColor\n          });\n        },\n        title: \"Let's Chat\",\n        color: \"#757083\",\n        style: styles.startChatButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Start;\n}(Component);\n\nexport { Start as default };\n;\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    height: '100%',\n    width: '100%'\n  },\n  logIn: {\n    height: '44%',\n    width: '88%',\n    backgroundColor: 'white',\n    marginBottom: '6%',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  appTitle: {\n    fontSize: 45,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginTop: '6%'\n  },\n  userNameInput: {\n    width: '88%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    fontSize: 16,\n    color: '#757083',\n    fontWeight: '300',\n    opacity: 0.5\n  },\n  startChatButton: {\n    width: '88%',\n    height: 40,\n    fontSize: 16,\n    fontWeight: '600',\n    backgroundColor: '#757083'\n  },\n  choseBackgroundColor: {\n    width: '88%',\n    fontSize: 16,\n    fontWeight: '300',\n    color: '#757083'\n  },\n  backgroundColorWrapper: {\n    width: '88%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  backgroundColor: {\n    height: 40,\n    width: 40,\n    borderRadius: 40 / 2,\n    marginLeft: 15\n  },\n  black: {\n    backgroundColor: '#090C08'\n  },\n  purple: {\n    backgroundColor: '#474056'\n  },\n  gray: {\n    backgroundColor: '#8A95A5'\n  },\n  green: {\n    backgroundColor: '#B9C6AE'\n  }\n});","map":{"version":3,"sources":["/Users/rajeski/Downloads/mChatApp/AppChat/components/Start.js"],"names":["React","Component","Start","state","userName","backgroundColor","styles","container","require","backgroundImage","appTitle","logIn","userNameInput","setState","choseBackgroundColor","backgroundColorWrapper","black","purple","gray","green","props","navigation","navigate","startChatButton","StyleSheet","create","flex","width","height","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","color","marginTop","borderColor","borderWidth","opacity","borderRadius","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// Import React native components\nimport { StyleSheet, Text, View, TextInput, Button, Alert, ImageBackground, TouchableOpacity } from 'react-native';\n\n// Default (Start) Screen \nexport default class Start extends Component {\n\n  // Define application state\n  state = {\n    userName: '',\n    backgroundColor: ''\n  }\n\n  // Render app components\n  render() {\n    return (\n\n      <View style={styles.container}>\n        {/* Fullscreen BackgroundImage */}\n        <ImageBackground source={require(\"../assets/BackgroundImage.png\")} style={styles.backgroundImage}>\n          {/* App title */}\n          <Text style={styles.appTitle}>ChatApp</Text>\n          {/* App login container */}\n          <View style={styles.logIn}>\n            {/* App text input form */}\n            <TextInput\n              style={styles.userNameInput}\n              onChangeText={(userName) => this.setState({ userName })}\n              value={this.state.userName}\n              placeholder='Your Name...'\n            />\n            {/* Select background color*/}\n            <Text style={styles.choseBackgroundColor}>Choose Background Color:</Text>\n            {/* Available options for background colors */}\n            <View style={styles.backgroundColorWrapper}>\n              {/* Black */}\n              <TouchableOpacity onPress={() => { this.setState({ backgroundColor: '#090C08' }) }}>\n                <View style={[styles.backgroundColor, styles.black]} >\n                </View>\n              </TouchableOpacity>\n              {/* Purple */}\n              <TouchableOpacity onPress={() => { this.setState({ backgroundColor: '#474056' }) }}>\n                <View style={[styles.backgroundColor, styles.purple]}>\n                </View>\n              </TouchableOpacity>\n              {/* Gray */}\n              <TouchableOpacity onPress={() => { this.setState({ backgroundColor: '#8A95A5' }) }}>\n                <View style={[styles.backgroundColor, styles.gray]}>\n                </View>\n              </TouchableOpacity>\n              {/* Green */}\n              <TouchableOpacity onPress={() => { this.setState({ backgroundColor: '#B9C6AE' }) }}>\n                <View style={[styles.backgroundColor, styles.green]}>\n                </View>\n              </TouchableOpacity>\n            </View>\n            {/* Begin Chat buttion start --> directs user to conversation screen*/}\n            <Button\n              onPress={() => {\n                this.props.navigation.navigate('Chat', { userName: this.state.userName, backgroundColor: this.state.backgroundColor });\n              }}\n              title=\"Let's Chat\"\n              color='#757083'\n              style={styles.startChatButton}\n            />\n          </View>\n        </ImageBackground>\n      </View>\n    );\n  }\n};\n\n// Application stylesheets\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    height: '100%',\n    width: '100%'\n  },\n  logIn: {\n    height: '44%',\n    width: '88%',\n    backgroundColor: 'white',\n    marginBottom: '6%',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  appTitle: {\n    fontSize: 45,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginTop: '6%'\n  },\n  userNameInput: {\n    width: '88%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    fontSize: 16,\n    color: '#757083',\n    fontWeight: '300',\n    opacity: 0.5\n  },\n  startChatButton: {\n    width: '88%',\n    height: 40,\n    fontSize: 16,\n    fontWeight: '600',\n    backgroundColor: '#757083'\n  },\n  choseBackgroundColor: {\n    width: '88%',\n    fontSize: 16,\n    fontWeight: '300',\n    color: '#757083'\n  },\n  backgroundColorWrapper: {\n    width: '88%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  backgroundColor: {\n    height: 40,\n    width: 40,\n    borderRadius: 40 / 2,\n    marginLeft: 15\n  },\n  black: {\n    backgroundColor: '#090C08'\n  },\n  purple: {\n    backgroundColor: '#474056'\n  },\n  gray: {\n    backgroundColor: '#8A95A5'\n  },\n  green: {\n    backgroundColor: '#B9C6AE'\n  },\n});"]},"metadata":{},"sourceType":"module"}